akka {
  # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs to STDOUT)
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "OFF"

  # Log level for the very basic logger activated during ActorSystem startup.
  # This logger prints the log messages to stdout (System.out).
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  stdout-loglevel = "OFF"

  # Filter of log events that is used by the LoggingAdapter before
  # publishing log events to the eventStream.
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  persistence {
    journal.plugin = "jdbc-journal"
    snapshot-store.plugin = "jdbc-snapshot-store"
  }
}


jdbc-connection {
  username           = "root"
  password           = ""
  driverClassName    = "com.mysql.jdbc.Driver"
  url                = "jdbc:mysql://localhost:3306/akka"
  journalSchemaName  = "public"
  journalTableName   = "journal"
  snapshotSchemaName = "public"
  snapshotTableName  = "snapshot"
}


akka-persistence-jdbc {
  slick {

      driver = "slick.driver.MySQLDriver"
      db {
        host = "localhost"
        host = "localhost"
        port = "3306"
        port = "3306"
        name = "akka"

        url = "jdbc:mysql://localhost:3306/akka"
        user = "root"
        password = ""
        driver = "com.mysql.jdbc.Driver"
        keepAliveConnection = on
        numThreads = 2
        queueSize = 100
      }
    }
}