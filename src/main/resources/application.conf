#//#snippet
akka {

#  stdout-loglevel = "OFF"
#  loglevel = "OFF"
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
    }
  }

  persistence {
      journal.plugin = "jdbc-journal"
      snapshot-store.plugin = "jdbc-snapshot-store"
    }

  cluster {
    seed-nodes = [
      "akka.tcp://ClusterSystem@127.0.0.1:2555",
      "akka.tcp://ClusterSystem@127.0.0.1:12551",
      "akka.tcp://ClusterSystem@127.0.0.1:2552"]

  }
}

# Disable legacy metrics in akka-cluster.
akka.cluster.metrics.enabled=off
# Enable metrics extension in akka-cluster-metrics.
akka.extensions=["akka.cluster.metrics.ClusterMetricsExtension", "akka.cluster.client.ClusterClientReceptionist"]

# Sigar native library extract location during tests.
# Note: use per-jvm-instance folder when running multiple jvm on one host. 
akka.cluster.metrics.native-library-extract-folder=${user.dir}/target/native
#//#snippet

akka.cluster.client.receptionist {
  # Actor name of the ClusterReceptionist actor, /system/receptionist
  name = receptionist

  # Start the receptionist on members tagged with this role.
  # All members are used if undefined or empty.
  role = ""

  # The receptionist will send this number of contact points to the client
  number-of-contacts = 2

  # The actor that tunnel response messages to the client will be stopped
  # after this time of inactivity.
  response-tunnel-receive-timeout = 30s

  # The id of the dispatcher to use for ClusterReceptionist actors.
  # If not specified default dispatcher is used.
  # If specified you need to define the settings of the actual dispatcher.
  use-dispatcher = ""

}

akka.actor {
  serializers {
    akka-sharding = "akka.cluster.sharding.protobuf.ClusterShardingMessageSerializer"
    java = "akka.serialization.JavaSerializer"
  }
  serialization-bindings {
    "akka.cluster.sharding.ClusterShardingSerializable" = akka-sharding
    "java.lang.String" = java
    "cluster.java.sharding.CounterChanged" = java
    "cluster.java.sharding.CounterChanged" = java
  }
  serialization-identifiers {
    "akka.cluster.sharding.protobuf.ClusterShardingMessageSerializer" = 13
  }
}

akka-persistence-jdbc {
  slick {

      driver = "slick.driver.MySQLDriver"
      db {
        host = "localhost"
        host = "localhost"
        port = "3306"
        port = "3306"
        name = "akka"

        url = "jdbc:mysql://localhost:3306/akka"
        user = "root"
        password = ""
        driver = "com.mysql.jdbc.Driver"
        keepAliveConnection = on
        numThreads = 2
        queueSize = 100
      }
    }
}
